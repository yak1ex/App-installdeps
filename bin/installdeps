#!/usr/bin/perl

use strict;
use warnings;

# PODNAME: installdeps
# ABSTRACT: A tiny script to install dependent modules
# VERSION

use Getopt::Std;
use Pod::Usage;

use Module::ExtractUse;

my %opts;
getopts('hi:n', \%opts);
pod2usage(-verbosity => 2) if exists $opts{h};
pod2usage(-msg => 'At least one argument MUST be specified', -verbose => 0, -exitval => 1) if ! @ARGV;
my $command = $opts{i} || 'cpanm';

my $p = Module::ExtractUse->new;
my %modules;

while(my $file = shift) {
	$p->extract_use($file);
	(%modules) = (%modules, %{$p->used});
}
my (@target) = grep { ! eval "use $_"; } keys %modules;
if($opts{n}) {
	print join(' ', @target), "\n";
} else {
	print $command,' ',join(' ', @target), "\n";
	system $command,@target;
}

__END__

=head1 SYNOPSIS

  # show POD help
  installdeps -h

  # dry-run (only shows target modules)
  # multiple files can be specified
  installdeps -n *.pl

  # specify install command
  # defaults to cpanm
  # the command following module names is invoked like
  # cpanm -f Foo::Bar Zot Qux
  installdeps -i 'cpanm -f' *.pl

=head1 DESCRIPTION

This is a tinay script to install dependent modules.
If you upload your scripts or modules to PAUSE, you can install dependent modules by cpanm/cpan/cpanp.
However, it is almost impossible and meaningless to upload all your daily-use scripts.

This script scans sources to detect dependent modules and install them.

=head1 OPTIONS

=for :list
= C<-h>
Shot this POD help
= C<-n>
Dry run (Do not install modules actually).
= C<-i E<lt>commandE<gt>>
Specify install command. Defaults to C<cpanm>.
=cut
